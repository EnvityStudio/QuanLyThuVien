@model PagedList.IPagedList<QuanLyThuVien.Models.Book>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    ViewBag.UserName = Session["Name"];
    Layout = "~/Views/Shared/_AfterLoginLayoutPage.cshtml";
}

<h2>Book</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Book", FormMethod.Get))
{
    <p>
        Search: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("MdImage", "Index")
        </th>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFitler = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Publisher", "Index", new { sortOrder = ViewBag.PublisherSortParm, currentFitler = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Category", "Index", new { sortOrder = ViewBag.categorySortParm, currentFitler = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new { sortOrder = ViewBag.NameAuthorSortParm, currentFitler = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Description", "Index")
        </th>
        <th>
            @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFitler = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>
@foreach (var item in Model) {
    <tr>
        <td>
            <img src="@item.MdImage" style="height:50px; width:50px"/>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Publisher.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Author.LastName)
        </td>
        <td>
            @{ 
                var shortDescription = item.Description;
                if (item.Description.Length > 50) {
                    shortDescription = item.Description.Substring(0, 50);
                    shortDescription = shortDescription + "...";
                }
            }
            @Html.DisplayFor(modelItem => shortDescription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
<div style="position: fixed; bottom: 0">
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
